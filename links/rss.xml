<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ten Digits</title>
  <subtitle>A journal of notes I&#39;m taking along the way.</subtitle>
  <link href="https://tendigits.space/feed.xml" rel="self"/>
  <link href="https://tendigits.space/"/>
  <updated>2021-03-17T00:00:00Z</updated>
  <id>https://tendigits.space/</id>
  <author>
    <name>Nate Steiner</name>
    <email>nate@natesteiner.com</email>
  </author>
  
  <entry>
    <title>Orca Box</title>
    <link href="https://tendigits.space/projects/orca-box/"/>
    <updated>2021-05-03T12:33:06Z</updated>
    <id>https://tendigits.space/projects/orca-box/</id>
    <content type="html">&lt;dl&gt;
&lt;dt&gt;Status&lt;/dt&gt;
&lt;dd&gt;Planning&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;The concept here is to create a physical UI with labeled buttons for controlling ORCA, running on a Raspberry Pi with midi out to multiple devices.
I&#39;m researching what kind of buttons to use, how I&#39;ll label them, and what they will be mounted in. I&#39;m also considering how to design the housing for the device.&lt;/p&gt;
&lt;p&gt;Some initial decisions that have been made, but all subject to change:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hyperpixel display hat on top of raspberry pi&lt;/li&gt;
&lt;li&gt;1/2 globe of glass to magnify screen&lt;/li&gt;
&lt;li&gt;grand central as &amp;quot;keyboard&amp;quot; control board for buttons&lt;/li&gt;
&lt;li&gt;circuit python to map buttons to key press in grand central&lt;/li&gt;
&lt;/ul&gt;
&lt;dl&gt;
&lt;dt&gt;Update&lt;/dt&gt;
&lt;dd&gt;Mar 24th 2021&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;I&#39;m not entirely sure that Grand Central can act as a keyboard, but I believe with the &lt;a href=&quot;https://circuitpython.readthedocs.io/projects/hid/en/latest/index.html&quot;&gt;Adafruit HID Library&lt;/a&gt; it can.&lt;/p&gt;
&lt;p&gt;I&#39;m also not sure how I&#39;ll do midi out. Ideally I can convert from USB from the Pi to a midi din port for the box, but I&#39;m not sure yet how to accomplish that.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Update&lt;/dt&gt;
&lt;dd&gt;Mar 31st 2021&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;I mapped out an initial idea for button layout. This seems really un-optimized with 62 buttons, but that&#39;s actually how many GPIO the Grand Central has, so I suppose it&#39;s possible. I&#39;ll do some more thinking... I believe this is not the final layout.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tendigits.space/img/orcabox-button-layout-1.png&quot; alt=&quot;OrcaBox Layout 1&quot; /&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Birdhouse Webcam</title>
    <link href="https://tendigits.space/projects/birdhouse-cam/"/>
    <updated>2021-05-03T12:33:06Z</updated>
    <id>https://tendigits.space/projects/birdhouse-cam/</id>
    <content type="html">&lt;dl&gt;
&lt;dt&gt;Status&lt;/dt&gt;
&lt;dd&gt;Completed v1, v2, v3&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Bluebirds are on the endangered species list, they have a lot of competition and dangers trying to survive in suburban landscapes. This project serves a few purposes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provide a safe nesting house for Bluebirds&lt;/li&gt;
&lt;li&gt;Educational value in being able to witness nest building, egg sitting, hatching and rearing processes&lt;/li&gt;
&lt;li&gt;Easy way to care for birds and intervening against any predators&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  
  <entry>
    <title>Bird Posters</title>
    <link href="https://tendigits.space/projects/bird-posters/"/>
    <updated>2021-05-03T12:33:06Z</updated>
    <id>https://tendigits.space/projects/bird-posters/</id>
    <content type="html">&lt;dl&gt;
&lt;dt&gt;Status&lt;/dt&gt;
&lt;dd&gt;Completed&lt;/dd&gt;
&lt;dt&gt;Finished&lt;/dt&gt;
&lt;dd&gt;May 28th 2020&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Our neighborhood put on an Art Walk, where
everyone was invited to display art in their yard,
or do a performance. This is during the
Covid-19 pandemic, so everyone was glad for a way
to get out and have an experience in a way that left
plenty of space for people to keep their distance.&lt;/p&gt;
&lt;p&gt;Our street is part of a small group of new modern
townhomes. As we are all relatively new to these
homes, and they are tightly built together, we&#39;ve
made a point to have good communication.&lt;/p&gt;
&lt;p&gt;We decided our street should try to participate in
the larger neighborhood effort in a big way. I offered
to create &amp;quot;coloring book&amp;quot; style posters that everyone
could fill in and decorate however they like. We
chose the theme of bird species that are found here
in the neighborhood.&lt;/p&gt;
&lt;p&gt;I made about a dozen of these, here&#39;s how they looked
prior to decoration:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.tendigits.space/img/bird-posters.jpg&quot; alt=&quot;Bird Posters&quot; /&gt;&lt;/p&gt;
&lt;p&gt;And here&#39;s how they looked after decoration and hung outside
on various balconies.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.tendigits.space/img/bird-posters-decorated.jpg&quot; alt=&quot;Bird Posters Decorated&quot; /&gt;&lt;/p&gt;
&lt;p&gt;It was a very rewarding feeling to have started a project
that the neighborhood felt inspired to be
involved with.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>New Projects</title>
    <link href="https://tendigits.space/notes/new-projects/"/>
    <updated>2021-03-17T00:00:00Z</updated>
    <id>https://tendigits.space/notes/new-projects/</id>
    <content type="html">&lt;p&gt;I&#39;ve been thinking through how to document projects on this site. There&#39;s lots of things happening at once, and I don&#39;t think random posts with tags is a good framework for documenting what&#39;s happening while it&#39;s happening.&lt;/p&gt;
&lt;p&gt;So I&#39;ll make a new type of project page in here, updates can get appended to it instead of being separate pages. They can show a time-log style view as projects go from concept to sketches, to prototypes and then builds. I think it&#39;s also flexible enough to cover lots of project types.&lt;/p&gt;
&lt;p&gt;Now I just need to decide how it should look in here.&lt;/p&gt;
&lt;h2&gt;Currently and upcoming:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;building a 3d printer from kit&lt;/li&gt;
&lt;li&gt;picture frames that play sounds&lt;/li&gt;
&lt;li&gt;ORCA in a box&lt;/li&gt;
&lt;li&gt;new dog bed sewing project&lt;/li&gt;
&lt;li&gt;3D printed sculpture wall art&lt;/li&gt;
&lt;li&gt;growing tomato from last year&#39;s seeds&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  
  <entry>
    <title>House Maintenance</title>
    <link href="https://tendigits.space/notes/house/"/>
    <updated>2021-01-06T00:00:00Z</updated>
    <id>https://tendigits.space/notes/house/</id>
    <content type="html">&lt;p&gt;My father-in-law is exceptionally good at maintenance and upkeep of the things he owns. In this way, he avoids having to buy replacement things, and unnecessary waste. In order to benefit from this wisdom, we asked him to share a list of the regular maintenance he does to upkeep his home. I&#39;m sharing a slightly re-worded version here for general reference.&lt;/p&gt;
&lt;h2&gt;HVAC&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;change filters every 4-6 months (eyeball for time to change)&lt;/li&gt;
&lt;li&gt;furnaces are &amp;quot;forever&amp;quot; so if you maintain them yourself, just keep the outside AC unit clean (hose the heat exchanger fins rigorously)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Fridge&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;increasingly difficult to get to heat exchanger fins so: move the fridge every few years, vacuum floor behind it, then use leaf blower to blow out dust (turn-off fridge for this), then vacuum kitchen which will be full of dust.&lt;/li&gt;
&lt;li&gt;&amp;quot;change filter&amp;quot; lights come on every six months. Don&#39;t bother with the air filter but change water filter at 12-18 months&lt;/li&gt;
&lt;li&gt;clean the freezer by emptying it and vacuuming the crumbs, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Disposal&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;clean the inside every few months, you will want to toss the rag&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Dryer&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;every few years, vacuum whatever you reach behind the filter using an attachment called Lint Lizard to attach a small diameter hose to the vacuum hose&lt;/li&gt;
&lt;li&gt;depending on the routing, have vent pipe cleaned every 5-10 years (5 if you can do it yourself, 10 otherwise)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Bathroom&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;sinks and (especially) shower drains, run a device called Zip-It to get out hair, etc. once or twice a year&lt;/li&gt;
&lt;li&gt;use full strength laundry bleach to control mildew (just be careful)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Water heater&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;you are told to drain some water once or twice a year&lt;/li&gt;
&lt;li&gt;keep it at 110 degrees (to save energy)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Garage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;use garage spring spray lubricant to grease the roller axles and the big spring every year or two&lt;/li&gt;
&lt;li&gt;insulate the garage door (they sell kits at Home depot, etc) if under living space&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Autos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;oil and filter depends on your driving. Don&#39;t get it changed if the oil on the dip-stick is still clean, you may be able to go a year or more&lt;/li&gt;
&lt;li&gt;air filter every 30,000, cabin filter every 60,000&lt;/li&gt;
&lt;li&gt;tire pressure (especially as winter arrives) every month or two.  rotate every 8-10,000 miles.&lt;/li&gt;
&lt;li&gt;fluids (including distilled water for battery) every 3 months&lt;/li&gt;
&lt;li&gt;for crazy people only! drain and refill the brake master cylinder when the fluid is dark.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Unpainted outside wood&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;treat decks, pergolas, etc with a good preservative every 2-3 years&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  
  <entry>
    <title>Inktober</title>
    <link href="https://tendigits.space/notes/inktober/"/>
    <updated>2020-10-01T00:00:00Z</updated>
    <id>https://tendigits.space/notes/inktober/</id>
    <content type="html">&lt;p&gt;For this year&#39;s Inktober I&#39;m planning to do brush ink drawings.  I&#39;ll use these drawings
scaled down as sprites in a game I&#39;m working on for the PlayDate platform. This will be my
first attempt at game development, so I&#39;m keeping it very simple and I&#39;m still deciding about
gameplay ideas.&lt;/p&gt;
&lt;p&gt;The general idea is that you can play as 4 different animals, in 4 different scenes, moving
your character around to try to optimize an outcome. Inktober seems like a great time to generate
graphics for these different scenes, so I&#39;m not following the official prompts.&lt;/p&gt;
&lt;p&gt;Here&#39;s the subject matter plan:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Octo&lt;/li&gt;
&lt;li&gt;Shark&lt;/li&gt;
&lt;li&gt;Hawk&lt;/li&gt;
&lt;li&gt;Owl&lt;/li&gt;
&lt;li&gt;Wolf&lt;/li&gt;
&lt;li&gt;Bear&lt;/li&gt;
&lt;li&gt;Frog&lt;/li&gt;
&lt;li&gt;Snake&lt;/li&gt;
&lt;li&gt;Urchin 1&lt;/li&gt;
&lt;li&gt;Urchin 2&lt;/li&gt;
&lt;li&gt;Coral 1&lt;/li&gt;
&lt;li&gt;Coral 2&lt;/li&gt;
&lt;li&gt;Seashell 1&lt;/li&gt;
&lt;li&gt;Seashell 2&lt;/li&gt;
&lt;li&gt;Rock 1&lt;/li&gt;
&lt;li&gt;Rock 2&lt;/li&gt;
&lt;li&gt;Ocean floor&lt;/li&gt;
&lt;li&gt;Cloud 1&lt;/li&gt;
&lt;li&gt;Cloud 2&lt;/li&gt;
&lt;li&gt;Cloud 3&lt;/li&gt;
&lt;li&gt;Grassland 1&lt;/li&gt;
&lt;li&gt;Grassland 2&lt;/li&gt;
&lt;li&gt;Water&lt;/li&gt;
&lt;li&gt;Shore&lt;/li&gt;
&lt;li&gt;Rat 1&lt;/li&gt;
&lt;li&gt;Rat 2&lt;/li&gt;
&lt;li&gt;Bull&lt;/li&gt;
&lt;li&gt;Tree 1&lt;/li&gt;
&lt;li&gt;Tree 2&lt;/li&gt;
&lt;li&gt;Insect 1&lt;/li&gt;
&lt;li&gt;Insect 2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&#39;ll be posting these to Mastodon. Hopefully all goes well and I&#39;ll have a retrospective to post here at the end.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tendigits.space/img/inktober-playdate.jpg&quot; alt=&quot;Octo drawing on PlayDate&quot; /&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Post Receive Hook</title>
    <link href="https://tendigits.space/notes/post-receive-hook/"/>
    <updated>2020-09-27T00:00:00Z</updated>
    <id>https://tendigits.space/notes/post-receive-hook/</id>
    <content type="html">&lt;p&gt;I&#39;ve been using git for years, but somehow never got into using
hooks. In order to make updating this website smoother, I&#39;m trying
out a very simple hook script which executes on the server
after I commit to it. After getting my local ssh configuration updated
so that I didn&#39;t have to manually log in each time, the next step was
figuring out how to commit directly into the server. This was done by
adding a &amp;quot;remote&amp;quot; which is an SSH user@address with full path to the
repo on the server.&lt;/p&gt;
&lt;p&gt;With this additional remote, I now push into the main repo for storage
and then to this new remote when I want to update the site.&lt;/p&gt;
&lt;p&gt;On the server, the .git/hooks/post-receive script is waiting and will
run:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token shebang important&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; start&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Because I&#39;m using 11ty, this triggers a rebuild of the static files. But
this script could do whatever you need to build your site.&lt;/p&gt;
&lt;p&gt;Although this is a very simple solution, it took me a lot of false
starts and wrong ideas before I finally landed here.&lt;/p&gt;
&lt;p&gt;Notes for future reference:&lt;/p&gt;
&lt;h2&gt;On the server&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;When you setup your web server, install git&lt;/li&gt;
&lt;li&gt;Clone your repo onto the server&lt;/li&gt;
&lt;li&gt;Configure nginx or whatever server to point your site from the repo (where ever it builds final files to)&lt;/li&gt;
&lt;li&gt;Add Lets Encrypt or other SSL&lt;/li&gt;
&lt;li&gt;Add a bash script to do whatever build command you need in the git folder of your repo at &lt;code&gt;.git/hooks/post-receive&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;git config --global receive.denyCurrentBranch updateInstead&lt;/code&gt; so you don&#39;t get an error committing into a non-bare repo.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;On your local&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Avoid the login prompt by &lt;a href=&quot;https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#adding-your-ssh-key-to-the-ssh-agent&quot;&gt;adding your SSH key to the SSH Agent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add a remote to the server &lt;code&gt;git remote add deploy ssh://&amp;lt;your-name&amp;gt;@&amp;lt;your-ip&amp;gt;/path/to/your/repo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;run &lt;code&gt;git push deploy branchName&lt;/code&gt; when you want to update the site&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  
  <entry>
    <title>Bagels</title>
    <link href="https://tendigits.space/notes/bagels/"/>
    <updated>2020-09-26T00:00:00Z</updated>
    <id>https://tendigits.space/notes/bagels/</id>
    <content type="html">&lt;p&gt;I started making these at home this year and was
surprised how good the results were. The key seems to
be about getting the right kind of flour and diastatic malt powder.&lt;/p&gt;
&lt;h2&gt;The flour&lt;/h2&gt;
&lt;p&gt;The recipe I&#39;m referencing calls for &amp;quot;High-gluten flour&amp;quot; however
I chose a product called &amp;quot;Super Bagel Flour&amp;quot; from Baker&#39;s Authority,
which includes other ingredients like malted barley flour.&lt;/p&gt;
&lt;h2&gt;Diastatic malt powder&lt;/h2&gt;
&lt;p&gt;This is used in the dough, but I also make slurry of it to add to the
boiling water.&lt;/p&gt;
&lt;h2&gt;The process&lt;/h2&gt;
&lt;p&gt;This process includes an overnight chill in the fridge, so it&#39;s in two parts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make the dough, rest it, shape it, put in fridge&lt;/li&gt;
&lt;li&gt;Boil in water, add toppings, bake&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Tools&lt;/h2&gt;
&lt;p&gt;These are not required, you can always improvise, but I&#39;m using:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stand mixer for mixing/kneading dough&lt;/li&gt;
&lt;li&gt;Large &amp;quot;pizza&amp;quot; stone for oven&lt;/li&gt;
&lt;li&gt;Very large pot for boiling multiple bagels at a time&lt;/li&gt;
&lt;li&gt;Scale for weighing flour&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Ingredients&lt;/h2&gt;
&lt;p&gt;This makes 1 dozen&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;680 grams of high gluten flour&lt;/li&gt;
&lt;li&gt;2 tsp table salt&lt;/li&gt;
&lt;li&gt;3/4 tsp instant yeast&lt;/li&gt;
&lt;li&gt;1 Tbs Diastatic yeast powder&lt;/li&gt;
&lt;li&gt;1 1/2 cup + 1 Tbs warm water&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Instructions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Dissolve the malt and yeast in water, stir and let sit 5 mins to activate.&lt;/li&gt;
&lt;li&gt;Blend flour and salt&lt;/li&gt;
&lt;li&gt;Add water and blend/knead for 10 mins until the dough is smooth and stretchy&lt;/li&gt;
&lt;li&gt;Roll into two 2&amp;quot; logs, cover and let rest for 20 mins&lt;/li&gt;
&lt;li&gt;Cut into 12 equal parts, stretch it around you fingers and roll into bagel shape. Search online videos for technique demonstrated by experts.&lt;/li&gt;
&lt;li&gt;Put bagels on tray, cover and refrigerate overnight.&lt;/li&gt;
&lt;li&gt;Mix 2 Tbs malt powder with 2 Tbs water to make a slurry&lt;/li&gt;
&lt;li&gt;Boil large pot of water, add the slurry to it, and also preheat oven to 460°F&lt;/li&gt;
&lt;li&gt;Boil the bagels in batches that fit the pot you&#39;re using until they float. Drain and add toppings if you like.&lt;/li&gt;
&lt;li&gt;Bake 15-18 mins, let cool for 30.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  
  <entry>
    <title>Updating SSL Certs</title>
    <link href="https://tendigits.space/notes/updating-ssh/"/>
    <updated>2020-08-25T00:00:00Z</updated>
    <id>https://tendigits.space/notes/updating-ssh/</id>
    <content type="html">&lt;p&gt;At some point soon I should sort out how to clean up the unused site folders on
my little Raspberry Pi server, and configure a chron tab to auto-update the SSL certs.&lt;/p&gt;
&lt;p&gt;But for now, it&#39;s not automated, and by the time the certs expire, I only sort
of vaugely remember what I did to update them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SSH into the server (how to do this is saved in your Pass store)&lt;/li&gt;
&lt;li&gt;Run certbot-auto&lt;/li&gt;
&lt;li&gt;Wait a looooong time for it to get started&lt;/li&gt;
&lt;li&gt;Follow the prompts&lt;/li&gt;
&lt;li&gt;Done!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There&#39;s not really much to it, but since I only have to do this once every
few months, it&#39;s nice to have a reminder of what to do.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>New Linux for an old iMac</title>
    <link href="https://tendigits.space/notes/imac-with-linux/"/>
    <updated>2020-06-17T00:00:00Z</updated>
    <id>https://tendigits.space/notes/imac-with-linux/</id>
    <content type="html">&lt;p&gt;Getting Linux on this old iMac was a bit of a bear, but I&#39;ve learned some things in the process, I&#39;ll share them here for anyone who might be trying to do the same thing and/or myself in the future.&lt;/p&gt;
&lt;p&gt;Some general points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Macs (iMac or otherwise) from different years can be &lt;em&gt;much&lt;/em&gt; simpler to setup with Linux, compatibility problems are not consistent. This info is specific to &lt;a href=&quot;https://everymac.com/systems/apple/imac/specs/imac-core-i3-3.06-21-inch-aluminum-mid-2010-specs.html&quot;&gt;my iMac model (mid-2010)&lt;/a&gt; but may be useful for other models.&lt;/li&gt;
&lt;li&gt;Ubuntu and Elementary (an offshoot OS) have a lot of built-in support for Mac hardware&lt;/li&gt;
&lt;li&gt;My issue was having to do with the boot up process, iMac&#39;s non-standard UEFI (so much for the U) and understanding how to work with Grub.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Below is a compiled transcript of what I did in a general sense. In reality I ended up giving up with installing just Elementary, and changed tactics to see if Ubuntu would be simpler. I ended up getting the boot process working with Ubuntu, however if I was starting over, I believe I could have done the same with Elementary. In the end, I decided to keep Ubuntu because Elementary allowed me to adjust the partition with an easy to use GUI so I could run them both. If you&#39;re trying to get just Elementary running, I don&#39;t think you&#39;d need to do this.&lt;/p&gt;
&lt;p&gt;Here&#39;s the transcript:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You&#39;ll want a USB flash drive, and wired USB keyboard and mouse.&lt;/li&gt;
&lt;li&gt;Setup flash drive with ISO for installer, using Balena Etcher for example&lt;/li&gt;
&lt;li&gt;Put flash drive in the Mac&lt;/li&gt;
&lt;li&gt;Boot Mac holding &amp;quot;Alt&amp;quot; to get EFI boot picker, pick the flash drive (if two show up, either one works).&lt;/li&gt;
&lt;li&gt;As you see the boot screen, press an arrow key to stop the timeout&lt;/li&gt;
&lt;li&gt;Press &#39;e&#39; to enter grub&#39;s option mode&lt;/li&gt;
&lt;li&gt;Add the word &#39;nomodeset&#39; at end of the line that has the word &amp;quot;splash&amp;quot;&lt;/li&gt;
&lt;li&gt;F10 or CTRL-x to boot&lt;/li&gt;
&lt;li&gt;Pick &amp;quot;Install Elementary&amp;quot; and follow the prompts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After this, I&#39;m prompted to remove the flash drive to restart, but it boots into a black screen. So we repeat the process, but this time we pick &amp;quot;Try Elementary&amp;quot; so we can get into a working OS (running off the flash drive). Then we&#39;ll do our boot modifications to the main install from this temporary one.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shut down computer&lt;/li&gt;
&lt;li&gt;Put the flash drive back in and power it up&lt;/li&gt;
&lt;li&gt;During boot up hold &amp;quot;Alt&amp;quot; to get EFI boot picker, pick the flash drive (if two show up, either one works).&lt;/li&gt;
&lt;li&gt;As you see the boot screen, press an arrow key to stop the timeout&lt;/li&gt;
&lt;li&gt;Press &#39;e&#39; to enter grub&#39;s option mode&lt;/li&gt;
&lt;li&gt;Add the word &#39;nomodeset&#39; at end of the line that has the word &amp;quot;splash&amp;quot;&lt;/li&gt;
&lt;li&gt;F10 or CTRL-x to boot&lt;/li&gt;
&lt;li&gt;Pick &amp;quot;Try Elementary&amp;quot; this time, to boot into the live USB OS&lt;/li&gt;
&lt;li&gt;Open terminal from applications&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;	&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; -i  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to work as root user&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;	&lt;span class=&quot;token function&quot;&gt;fdisk&lt;/span&gt; -l&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to see what the drives are, find the one who&#39;s size is measured in Gigabytes (e.g. /dev/sda2). Now we are going to mount that main drive and associated OS folders so we can apply changes.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;	&lt;span class=&quot;token function&quot;&gt;mount&lt;/span&gt; /dev/sda2 /mnt/&lt;br /&gt;	&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token for-or-select variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; /dev /dev/pts /proc /sys /run&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;mount&lt;/span&gt; -B &lt;span class=&quot;token variable&quot;&gt;$i&lt;/span&gt; /mnt&lt;span class=&quot;token variable&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; /mnt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we chroot to emulate like we are operating in the main OS drive.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;	&lt;span class=&quot;token function&quot;&gt;chroot&lt;/span&gt; /mnt&lt;br /&gt;	pico /etc/default/grub  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to edit the grub file, add &#39;nomodeset&#39; after &amp;quot;splash&amp;quot;&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;	CTRL-X &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to exit, choose &amp;quot;y&amp;quot; to save when prompted. Next we run &amp;quot;update-grub&amp;quot; so the
changes will stick.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;	&lt;span class=&quot;token function&quot;&gt;update-grub&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Restart computer. You may be done now, but if you&#39;re thrown into grub prompt, then:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;	&lt;span class=&quot;token function&quot;&gt;ls&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to see the drives e.g. (hd0) (hd0, gpt2), (hd1)... or something like that&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;	&lt;span class=&quot;token function&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;hd0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to see what type of drive it is, look for the super large ext* one. Note &amp;quot;(hd0, gpt2)&amp;quot;
is a fake example name.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;	&lt;span class=&quot;token builtin class-name&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;boot&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;hd0, gpt2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token builtin class-name&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;hd0, gpt2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;/boot/grub&lt;br /&gt;	insmod normal&lt;br /&gt;	normal&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This should get you booted in. Then open terminal and&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;	&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; -i&lt;br /&gt;	grub-install /dev/sda2&lt;br /&gt;	&lt;span class=&quot;token function&quot;&gt;apt-get&lt;/span&gt; udpate&lt;br /&gt;	&lt;span class=&quot;token function&quot;&gt;apt-get&lt;/span&gt; upgrade&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you should be able to shut down and restart as needed.&lt;/p&gt;
&lt;p&gt;The above is a pseudo transcript of what I (sort of) did. If you have updates or additional info you think should be added, let me know and I&#39;ll add notes.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>AE Modular</title>
    <link href="https://tendigits.space/notes/ae-modular/"/>
    <updated>2020-05-31T00:00:00Z</updated>
    <id>https://tendigits.space/notes/ae-modular/</id>
    <content type="html">&lt;h2&gt;AE Modular&lt;/h2&gt;
&lt;p&gt;AE Modular is a product line of modular synths from Tangible Waves. It differs from Eurorack by using
standardized parts that reduce the overall cost. This is my first synth device besides 2 pocket operators.&lt;/p&gt;
&lt;h2&gt;Getting started&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.flickr.com/photos/nate/albums/72157714503963138/with/49949375368/&quot;&gt;The kit arrived&lt;/a&gt;
completely assembled and with a helpful getting started pamphlet.&lt;/p&gt;
&lt;h2&gt;Modules&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Info on each module here soon&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>This website&#39;s setup with 11ty</title>
    <link href="https://tendigits.space/notes/site-11ty-setup/"/>
    <updated>2020-05-30T00:00:00Z</updated>
    <id>https://tendigits.space/notes/site-11ty-setup/</id>
    <content type="html">&lt;p&gt;This website is static HTML with a little CSS as a treat. There&#39;s no Javascript in use here
(at least at the moment). This site is built using &lt;a href=&quot;https://11ty.io/&quot;&gt;11ty&lt;/a&gt;, a static site
generator that runs on JS/Node/Webpack.&lt;/p&gt;
&lt;p&gt;I&#39;ve been using 11ty since shortly after it was introduced, there are a few things I like about it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is designed to do as little as possible&lt;/li&gt;
&lt;li&gt;None of it&#39;s code needs to show up in the websites you produce with it&lt;/li&gt;
&lt;li&gt;It doesn&#39;t require you to structure your site in a specific way&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&#39;s take a look at the config file, this is the entire thing:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pluginRss &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;@11ty/eleventy-plugin-rss&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; syntaxHighlight &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;@11ty/eleventy-plugin-syntaxhighlight&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; moment &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;moment&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;eleventyConfig&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addPlugin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;pluginRss&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addPlugin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;syntaxHighlight&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addPassthroughCopy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;img&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addPassthroughCopy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;assets&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addNunjucksFilter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;nicedate&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;  moment&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;utc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;MMM Do YYYY&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addCollection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;tagList&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;./_11ty/getTagList&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    dir&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      includes&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;_includes&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      layouts&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;_layouts&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Reading down the code, here&#39;s how it works. A couple plugins and a library is loaded in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RSS plugin generates the site&#39;s RSS file with a simple template&lt;/li&gt;
&lt;li&gt;Syntax highlight brings Prism into use to generate styled code blocks (like above)&lt;/li&gt;
&lt;li&gt;Moment lib is used to translate date stamps into nicer to read dates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then the main export supplies the config options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adding RSS and Syntax plugins&lt;/li&gt;
&lt;li&gt;Allow &amp;quot;img&amp;quot; and &amp;quot;assets&amp;quot; folders to just get copied into the site (don&#39;t try to process)&lt;/li&gt;
&lt;li&gt;Add a custom filter so in the Nunjuck templates I can just say:&lt;/li&gt;
&lt;li&gt;Generate the list of tags&lt;/li&gt;
&lt;li&gt;Specify which folders are used for includes and layouts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&#39;s all that I need to run 11ty. When I&#39;m writing content I use the &amp;quot;serve&amp;quot; command to preview
changes locally. When I&#39;m done, the server runs a the &amp;quot;build&amp;quot; command generate the updated pages.&lt;/p&gt;
&lt;p&gt;If you&#39;re interested in cloning to use my site as a starting point, or just reading more of the code,
you can find the git repo at &lt;a href=&quot;https://git.sr.ht/~tendigits/tendigits.space&quot;&gt;https://git.sr.ht/~tendigits/tendigits.space&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Setting up this website</title>
    <link href="https://tendigits.space/notes/hello/"/>
    <updated>2020-05-20T00:00:00Z</updated>
    <id>https://tendigits.space/notes/hello/</id>
    <content type="html">&lt;h2&gt;Welcome&lt;/h2&gt;
&lt;p&gt;If you&#39;re seeing this, then I must have done something right.&lt;/p&gt;
&lt;h2&gt;Hosting&lt;/h2&gt;
&lt;p&gt;I decided to go with self-hosting. There are a few reasons for this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I already have some static IPs from my ISP&lt;/li&gt;
&lt;li&gt;This website is simple enough that I can run it off a Raspberry Pi&lt;/li&gt;
&lt;li&gt;Avoid another service cost&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&#39;m using nginx for the server, and Let&#39;s Encrypt to take care of the security certificates.&lt;/p&gt;
&lt;h2&gt;The Build&lt;/h2&gt;
&lt;p&gt;I&#39;m using &lt;a href=&quot;https://11ty.io/&quot;&gt;11ty&lt;/a&gt;, a static site generator. 11ty is built out of JS and requires Node
and a few dependencies, but none of that shows up in the output, which can be just HTML/CSS as I&#39;m doing
here. Eventually I may create my own static site builder, but I didn&#39;t want to hold up working on this
website for that.&lt;/p&gt;
&lt;h2&gt;Deployment&lt;/h2&gt;
&lt;p&gt;I have node and git setup on the Raspberry Pi server. I have a shell script which uses SSH to access the
server, does a git pull to get the latest updates and run 11ty&#39;s build.&lt;/p&gt;
&lt;p&gt;11ty&#39;s build updates a &amp;quot;_site&amp;quot; folder which is what nginx is mapped to use as the site root.&lt;/p&gt;
</content>
  </entry>
</feed>
